/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wordle;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.text.BadLocationException;

/**
 *
 * @author athar
 */
public class wordleUI extends javax.swing.JFrame {

    /**
     * Creates new form wordleUI
     */
    static HashSet<String> set = new HashSet<>();
    HashMap<Character, Integer> map = new HashMap<>();;
    boolean gameOver;
    int counter;
    int labelCounter;
    int previousCaretPosition;
    String wotd;
    
    JLabel[] labels = new JLabel[30];
    
    public wordleUI() {
        initComponents();
        input.setEditable(false);
        try{
            File myObj = new File("words.txt");
            try (Scanner myReader = new Scanner(myObj)) {
                while (myReader.hasNextLine())
                    set.add(myReader.nextLine());
            }
        } catch (FileNotFoundException e) {
            System.exit(0);
        }
        
        GridLayout layout = new GridLayout(6,5);
        layout.setHgap(5);
        layout.setVgap(5);
        jPanel2.setLayout(layout);
        
        for(int i=0; i<30; i++){
            labels[i] = new JLabel();
            labels[i].setOpaque(true);
            labels[i].setText("");
            labels[i].setBackground(new java.awt.Color(255, 255, 255));
            labels[i].setFont(new java.awt.Font("Arial", 1, 30));
            labels[i].setBorder(BorderFactory.createLineBorder(Color.BLACK, 1, true));
            labels[i].setHorizontalAlignment(SwingConstants.CENTER);
            labels[i].setPreferredSize(new Dimension(65,65));
            jPanel2.add(labels[i]);
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        startBtn = new javax.swing.JButton();
        statusBar = new javax.swing.JLabel();
        input = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(457, 315));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        title.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        title.setText("Wordle");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        startBtn.setText("Start");
        startBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startBtnMouseClicked(evt);
            }
        });

        statusBar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputKeyReleased(evt);
            }
        });

        jLayeredPane1.setLayer(startBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(statusBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(input, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(191, 191, 191)
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addContainerGap(183, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startBtn)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 420, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startBtnMouseClicked
        startBtn.setVisible(false);
        statusBar.setText("Enter word");
        input.requestFocusInWindow();
        input.setEditable(true);
        init();
        System.out.println(wotd);
    }//GEN-LAST:event_startBtnMouseClicked

    private void inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyReleased
        if(!gameOver && counter < 6){
            int code = evt.getKeyCode();
            if(code == KeyEvent.VK_ENTER)
                //System.out.println();
                play();
            else if((64 < code && code < 91) || (96 < code && code < 123) || (code == KeyEvent.VK_BACK_SPACE)){    
                if(labelCounter < 5*(counter+1) || (previousCaretPosition > input.getCaretPosition())){
                    previousCaretPosition = input.getCaretPosition();
                    int val = labelCounter - 5*(counter);
                    if(previousCaretPosition > val){
                        try {
                            labels[labelCounter].setText(input.getText(val, 1).toUpperCase());
                        } catch (BadLocationException ex) {
                            Logger.getLogger(wordleUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        labelCounter++;
                    }
                    else if(previousCaretPosition < val){
                        labels[--labelCounter].setText("");
                    }
                }
            }
        }
    }//GEN-LAST:event_inputKeyReleased
    
    private void getCharCount(){
        for(int i=0; i<wotd.length(); i++){
            int count = map.containsKey(wotd.charAt(i)) ? map.get(wotd.charAt(i)) : 0;
            map.put(wotd.charAt(i), count + 1);
        }
    }
    
    private void play(){
        //getCharCount();
        String a = input.getText().substring(0,5);
        
        if(!set.contains(a)){
            statusBar.setText("Not an actual word!");
        }
        else if(a.equals(wotd)){
            for(int i=labelCounter-5; i<labelCounter; i++)
                labels[i].setBackground(new java.awt.Color(144, 238, 144));
            statusBar.setText("You win!");
            //JOptionPane.showMessageDialog(this, "OMG! Impossible!!! Genius indeed!");
            gameOver = true;
        }
        else{
            /*
            boolean[] flag = new boolean[5];
            
            for(int i=labelCounter-5, j=0; i<labelCounter; i++, j++){
                if(a.charAt(j) == wotd.charAt(j) && map.get(a.charAt(j)) > 0){
                    labels[i].setBackground(new java.awt.Color(144, 238, 144));
                    map.put(wotd.charAt(j), map.get(wotd.charAt(j)) - 1);
                    flag[j] = true;
                }
            }
            
            for(int i=labelCounter-5, j=0; i<labelCounter; i++, j++){
                if(map.get(a.charAt(j)) > 0 && !flag[j] && wotd.indexOf(a.charAt(j)) != -1){
                    labels[i].setBackground(new java.awt.Color(255, 215, 105));
                    map.put(a.charAt(j), map.get(a.charAt(j)) - 1);
                }
                else
                    labels[i].setBackground(new java.awt.Color(140, 140, 140));
            }
            
            */
            for(int i=labelCounter-5, j=0; i<labelCounter; i++, j++){
                if(a.charAt(j) == wotd.charAt(j)/* && map.get(a.charAt(j)) > 0*/){
                    labels[i].setBackground(new java.awt.Color(144, 238, 144));
                    //map.put(wotd.charAt(j), map.get(wotd.charAt(j)) - 1);
                }
                else if(wotd.indexOf(a.charAt(j)) != -1){
                    labels[i].setBackground(new java.awt.Color(255, 215, 105));
                }
                else
                    labels[i].setBackground(new java.awt.Color(140, 140, 140));
            }
            counter++;
        }
        
        input.setText("");
        
        if(counter == 6 || gameOver){
            statusBar.setText("Hit Start to  Play again!");
            startBtn.setVisible(true);
            map.clear();
        }
    }
    
    private void init(){
        int randomNumber = new Random().nextInt(set.size());
        Iterator<String> it = set.iterator();
        int currentIndex = 0;
        while(it.hasNext()) {
            wotd = it.next();
            if (currentIndex == randomNumber)
                break;
            currentIndex++;
        }
        /*
        for(int i=0; i<wotd.length(); i++){
            int count = map.containsKey(wotd.charAt(i)) ? map.get(wotd.charAt(i)) : 0;
            map.put(wotd.charAt(i), count + 1);
        }
        */
        gameOver = false;
        labelCounter = 0;
        counter = 0;
        previousCaretPosition = input.getCaretPosition();
        for(int i=0; i<30; i++){
            labels[i].setText("");
            labels[i].setBackground(new java.awt.Color(255, 255, 255));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(wordleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(wordleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(wordleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(wordleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new wordleUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField input;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton startBtn;
    private javax.swing.JLabel statusBar;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
